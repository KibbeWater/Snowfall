name: MSBuild

on: [push]

env:
  SOLUTION_FILE_PATH: CrackGame.sln
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build Dependencies
      run: ./CrackGame/builddeps.bat

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Cleanup release
      shell: bash
      run: |
        find "x64/Release" -type f ! -name "Snowfall.dll" -delete
    - name: Upload Build
      if: startsWith(github.ref, 'refs/tags/') == false
      uses: actions/upload-artifact@v3
      with:
        name: Snowfall-${{ github.sha }}
        path: ./x64/Release/
        
    - name: Extract Release Version
      if: startsWith(github.ref, 'refs/tags/')
      id: get_version
      shell: bash
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Snowfall v${{ steps.get_version.outputs.version }}
        files: ./x64/Release/Snowfall.dll
